{"version":3,"sources":["styles/AppStyled.js","assets/image/8k_earth_daymap.jpg","assets/image/8k_earth_clouds.jpg","assets/image/8k_earth_nightmap.jpg","assets/image/8k_earth_normal_map.jpg","assets/image/8k_earth_specular_map.jpg","assets/image/8k_mercury.jpg","components/Sun.js","components/Earth.js","components/TopSection.js","views/App.js","assets/javascript/main.js","reportWebVitals.js","index.js"],"names":["setcolor","keyframes","gradient","App","styled","div","props","screen","H1","h1","Sun","useLoader","TextureLoader","SunMap","Sunmap","moon","React","useRef","useFrame","elspedT","clock","getElapsedTime","current","position","x","Math","cos","z","sin","castShadow","ref","scale","attach","args","map","opacity","side","THREE","Earth","EarthDayMap","EarthNormalMap","EarthSpecularMap","EarthCloud","EarthNightMap","colorMapp","normalMapp","specularMapp","cloudMap","earth","cloud","rotation","y","Stars","radius","depth","count","factor","fade","saturation","receiveShadow","depthWrite","transparent","specularMap","metalness","roughness","normalMap","OrbitControls","enableZoom","enablePan","zoomSpeed","enableRotate","panSpeed","rotateSpeed","TopSection","state","time2022","Date","getTime","theTime","window","innerWidth","time","this","setInterval","setState","addEventListener","screenh1","className","floor","Component","style","height","width","colorManagement","shadowMap","camera","fov","color","intensity","fallback","play2","document","getElementById","a","play","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e7507435.chunk.js","sourcesContent":["import styled,{keyframes} from 'styled-components';\nconst  setcolor  = keyframes ` \n  0% {\n    color: #ee7752;\n  }\n  25% {\n    color: #e73c7e;\n  }\n  50% {\n    color: #23a6d5;\n  }\n  75% {\n    color: #23d5ab;\n  }\n  100% {\n    color: #ee7752;\n  }\n\n`\nconst  gradient = keyframes `\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst App  = styled.div`\n  text-align: center;\n  position: absolute;\n  top:  ${props => props.screen > 768?50:75}%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  user-select: none;\n  z-index: 999;\n  span {\n    width: ${props => props.screen > 768?100:30}px;\n    height: ${props => props.screen > 768?100:30}px;\n    margin: 0 ${props => props.screen > 768?80:30}px;\n    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\n    font-size: ${props => props.screen > 768?50:20}px;\n    background-size: 400% 400%;\n    animation: ${gradient} 5.5s ease infinite;\n\n    color: white;\n    line-height: ${props => props.screen > 768?100:30}px;\n    text-align: center;\n    border-radius: ${props => props.screen > 768?15:5}px;\n    position: relative;\n    &:first-child{\n      margin: 0  ${props => props.screen > 768?80:25}px 0 -10px;\n    }\n    \n  }\n  .day::after {\n    content: \"Days\";\n    position: absolute;\n    font-weight: 800;\n    bottom:  ${props => props.screen > 768?-30:-8}px;\n    font-size: ${props => props.screen > 768?30:13}px;\n    right: ${props => props.screen > 768?-70:-35}px;\n    color: rgb(255, 255, 255);\n  }\n  .hour::after {\n    content: \"Hours\";\n    position: absolute;\n    font-weight: 800;\n    bottom:  ${props => props.screen > 768?-30:-8}px;\n    font-size:  ${props => props.screen > 768?30:13}px;\n    right:  ${props => props.screen > 768?-90:-40}px;\n    color: rgb(255, 255, 255);\n  }\n  .minute::after {\n    content: \"Minutes\";\n    position: absolute;\n    font-weight: 800;\n    bottom:  ${props => props.screen > 768?-30:-8}px;\n    font-size:  ${props => props.screen > 768?30:13}px;\n    right:  ${props => props.screen > 768?-120:-55}px;\n    color: rgb(255, 255, 255);\n  }\n  .second::after {\n    content: \"Seconds\";\n    position: absolute;\n    font-weight: 800;\n    bottom:  ${props => props.screen > 768?-30:-8}px;;\n    font-size: ${props => props.screen > 768?30:13}px;\n    right:  ${props => props.screen > 768?-120:-55}px;\n    color: rgb(255, 255, 255);\n  }\n`\n\n const H1  =styled.h1`\n  position: absolute;\n  font-weight: bold;\n  font-size:  ${props => props.screen > 768?100:40}px;;\n\n  text-align: center;\n  top: 10%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  user-select: none;\n  z-index: 999;\n  animation:  ${setcolor} 2s linear infinite;\n`\nexport {App,H1}","export default __webpack_public_path__ + \"static/media/8k_earth_daymap.54672c1f.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_clouds.08fcd800.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_nightmap.c0e138e9.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_normal_map.930cf2e9.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_specular_map.7b4efa59.jpg\";","export default __webpack_public_path__ + \"static/media/8k_mercury.b3bc4c35.jpg\";","import React from \"react\"\r\nimport { useFrame, useLoader } from '@react-three/fiber'\r\nimport { TextureLoader } from 'three'\r\nimport {OrbitControls,Stars} from \"@react-three/drei\"\r\nimport * as THREE from 'three'\r\nimport SunMap from '../assets/image/8k_mercury.jpg'\r\nconst Sun = (props) => {\r\n const [Sunmap] = useLoader(TextureLoader, [SunMap])\r\n const moon = React.useRef()\r\n useFrame(({clock}) => {\r\n     const elspedT = clock.getElapsedTime()\r\n    moon.current.position.x = 3.5*Math.cos(elspedT/8) + 0;\r\n    moon.current.position.z = 3.5*Math.sin(elspedT/8) + 0;\r\n\r\n})  \r\n     return (\r\n        <>\r\n        <mesh  castShadow  ref ={moon}  scale={[0.2, 0.2 ,0.2]}>\r\n            \r\n            <sphereGeometry attach=\"geometry\" args={[1, 32, 32]} />\r\n            <meshStandardMaterial attach=\"material\"/>\r\n            <meshPhongMaterial attach=\"material\"  map={Sunmap} opacity={1}  side={THREE.DoubleSide} />\r\n        </mesh>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Sun","import React, { Component } from 'react'\r\nimport EarthDayMap from \"../assets/image/8k_earth_daymap.jpg\"\r\nimport EarthCloud from \"../assets/image/8k_earth_clouds.jpg\"\r\nimport EarthNightMap from \"../assets/image/8k_earth_nightmap.jpg\"\r\nimport EarthNormalMap from \"../assets/image/8k_earth_normal_map.jpg\"\r\nimport EarthSpecularMap from \"../assets/image/8k_earth_specular_map.jpg\"\r\nimport { useFrame, useLoader } from '@react-three/fiber'\r\nimport { TextureLoader } from 'three'\r\nimport {OrbitControls,Stars} from \"@react-three/drei\"\r\nimport * as THREE from 'three'\r\nimport Sun from './Sun'\r\n\r\nexport default function Earth (props) { \r\n    const [colorMapp,normalMapp,specularMapp,cloudMap,nightMap] = useLoader(TextureLoader,[EarthDayMap,EarthNormalMap,EarthSpecularMap,EarthCloud, EarthNightMap])\r\n       const earth = React.useRef()\r\n       const cloud = React.useRef()\r\n     \r\n       useFrame(({clock}) => {\r\n           const elspedT = clock.getElapsedTime()\r\n        earth.current.rotation.y = elspedT/8\r\n        cloud.current.rotation.y = elspedT/8\r\n      \r\n    })  \r\n      \r\n    return (\r\n            <> \r\n            <Stars radius={300}  depth={60} count={10000} factor={7} fade={true} saturation={0}/>\r\n            <mesh receiveShadow ref={cloud} scale={[1.9998,1.9998,1.9998]}>\r\n                <sphereBufferGeometry attach=\"geometry\" args={[1.005, 32, 32]} />\r\n                <meshPhongMaterial map={cloudMap} opacity={0.4} depthWrite ={true} transparent={true} side={THREE.DoubleSide}></meshPhongMaterial>\r\n            </mesh>\r\n            <mesh ref={earth} scale={[2,2,2]}  receiveShadow >\r\n                <sphereGeometry attach=\"geometry\" args={[1, 32, 32]} />\r\n                <meshPhongMaterial attach=\"material\" specularMap={specularMapp}  />\r\n                <meshStandardMaterial attach=\"material\" map={colorMapp} metalness={0.5} roughness={0.7} normalMap={normalMapp}/>\r\n                <OrbitControls enableZoom ={true} enablePan={true} zoomSpeed={0.5} enableRotate = {true}  panSpeed={5} rotateSpeed={0.5}/>\r\n            </mesh>\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n","import React from \"react\"\r\nimport { App, H1 } from \"../styles/AppStyled\";\r\n export default class TopSection extends React.Component {\r\n        constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n            time2022: new Date(\"Jan 1, 2022 0:0:0\").getTime(),\r\n            theTime: new Date().getTime(),\r\n            screen:window.innerWidth\r\n          };\r\n        }\r\n        render() {\r\n      var time = this.state.time2022 - this.state.theTime;\r\n      setInterval(() => {\r\n       this.setState({ theTime: new Date().getTime() });\r\n      }, 1000)\r\n      return(\r\n          <>\r\n          {window.addEventListener(\"resize\", () => {this.setState({screen:window.innerWidth})})}\r\n          <H1 screenh1= {this.state.screen}>COUNTDOWN TO NEW YEAR 2022</H1>\r\n            <App screen= {this.state.screen}>\r\n              <span className='day'>{Math.floor(time / (24 * 60 * 60 * 1000)) < 10 ? \"0\" + Math.floor(time / (24 * 60 * 60 * 1000)) : Math.floor(time / (24 * 60 * 60 * 1000))}</span>\r\n              <span className='hour'>{Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) < 10 ? \"0\" + Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) : Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))}</span>\r\n              <span className='minute'>{Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)) < 10 ? \"0\" + Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)) : Math.floor((time % (1000 * 60 * 60)) / (1000 * 60))}</span>\r\n              <span className='second'>{Math.floor((time % (1000 * 60)) / 1000) < 10 ? \"0\" + Math.floor((time % (1000 * 60)) / 1000) : Math.floor((time % (1000 * 60)) / 1000)}</span>\r\n            </App>  \r\n           \r\n            \r\n         </>)}\r\n        \r\n}\r\n\r\n","\nimport '../styles/AppStyled.js';\nimport React, { Component, Suspense } from 'react'\nimport {Canvas} from '@react-three/fiber'\nimport Earth from '../components/Earth';\nimport Sun from '../components/Sun';\nimport TopSection from '../components/TopSection';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time2022: new Date(\"Jan 1, 2022 0:0:0\").getTime(),\n      theTime: new Date().getTime()\n    };\n  }\n   \n  render() {\n    // var time = this.state.time2022 - this.state.theTime;\n    // setInterval(() => {\n    //   this.setState({ theTime: new Date().getTime() });\n    // }, 1000)\n    return (\n      <>\n      <div style={{height:\"100vh\",width:\"100vw\"}}>\n        <TopSection></TopSection>\n      <Canvas  colorManagement\n      shadowMap\n      camera={{ position: [-3, 2, 5], fov: 90 }}>\n        <ambientLight color=\"#3385ff\" intensity={0.1} opacity = {0.4} />\n            <directionalLight castShadow\n            shadow-mapSize-height={1512}\n            shadow-mapSize-width={1512} scale={[2,2,2]} position={[3,0,3]}  color={0xffffff} />\n          <Suspense  fallback = {null}>\n              <Earth></Earth>\n              <Sun></Sun>\n          </Suspense>\n        </Canvas>\n\n      </div>\n        \n        {/* <h1>COUNTDOWN TO 2022</h1>\n        <div className=\"App\">\n          <span className='day'>{Math.floor(time / (24 * 60 * 60 * 1000)) < 10 ? \"0\" + Math.floor(time / (24 * 60 * 60 * 1000)) : Math.floor(time / (24 * 60 * 60 * 1000))}</span>\n          <span className='hour'>{Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) < 10 ? \"0\" + Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) : Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))}</span>\n          <span className='minute'>{Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)) < 10 ? \"0\" + Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)) : Math.floor((time % (1000 * 60 * 60)) / (1000 * 60))}</span>\n          <span className='second'>{Math.floor((time % (1000 * 60)) / 1000) < 10 ? \"0\" + Math.floor((time % (1000 * 60)) / 1000) : Math.floor((time % (1000 * 60)) / 1000)}</span>\n        </div> */}\n        \n      </>\n    );\n  }\n}\n","var play2 = document.getElementById('play');\r\nwindow.addEventListener('click', async function () {\r\n   await play2.play();\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './views/App';\nimport './assets/javascript/main.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}